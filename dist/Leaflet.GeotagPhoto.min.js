!function(){"use strict";function e(e){if(!e)throw new Error("No obj passed");var r=t(e);if(r.length>1&&"number"==typeof r[0]&&"number"==typeof r[1])return r;throw new Error("Coordinate is not a valid Point")}function t(e){if(!e)throw new Error("No obj passed");var t;if(e.length?t=e:e.coordinates?t=e.coordinates:e.geometry&&e.geometry.coordinates&&(t=e.geometry.coordinates),t)return r(t),t;throw new Error("No valid coordinates")}function r(e){if(e.length>1&&"number"==typeof e[0]&&"number"==typeof e[1])return!0;if(e[0].length)return r(e[0]);throw new Error("coordinates must only contain numbers")}function o(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}function n(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function i(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(var o=0;o<e.features.length;o++){var n=e.features[o];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function a(e,t){if(!e)throw new Error("No geometry passed");return{type:"Feature",properties:t||{},geometry:e}}function s(e,t,r){var o,n,i,a,g,h,l,c,u,m,f=0,d=0,p="FeatureCollection"===e.type,y="Feature"===e.type,_=p?e.features.length:1;for(o=0;o<_;o++)for(u=p?e.features[o].geometry:y?e.geometry:e,m="GeometryCollection"===u.type,l=m?u.geometries.length:1,a=0;a<l;a++)if(h=m?u.geometries[a]:u,c=h.coordinates,f=!r||"Polygon"!==h.type&&"MultiPolygon"!==h.type?0:1,"Point"===h.type)t(c,d),d++;else if("LineString"===h.type||"MultiPoint"===h.type)for(n=0;n<c.length;n++)t(c[n],d),d++;else if("Polygon"===h.type||"MultiLineString"===h.type)for(n=0;n<c.length;n++)for(i=0;i<c[n].length-f;i++)t(c[n][i],d),d++;else if("MultiPolygon"===h.type)for(n=0;n<c.length;n++)for(i=0;i<c[n].length;i++)for(g=0;g<c[n][i].length-f;g++)t(c[n][i][g],d),d++;else{if("GeometryCollection"!==h.type)throw new Error("Unknown Geometry Type");for(n=0;n<h.geometries.length;n++)s(h.geometries[n],t,r)}}function g(e,t,r,o){var n=r;return s(e,function(e,o){n=0===o&&void 0===r?e:t(n,e,o)},o),n}function h(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length;r++)t(e.features[r].properties,r);break;case"Feature":t(e.properties,0)}}function l(e,t,r){var o=r;return h(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function c(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length;r++)t(e.features[r],r)}function u(e,t,r){var o=r;return c(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function m(e){var t=[];return s(e,function(e){t.push(e)}),t}function f(e,t){var r,o,n,i,a,s,g,h=0,l="FeatureCollection"===e.type,c="Feature"===e.type,u=l?e.features.length:1;for(r=0;r<u;r++)for(s=l?e.features[r].geometry:c?e.geometry:e,g="GeometryCollection"===s.type,a=g?s.geometries.length:1,n=0;n<a;n++)if(i=g?s.geometries[n]:s,"Point"===i.type||"LineString"===i.type||"MultiPoint"===i.type||"Polygon"===i.type||"MultiLineString"===i.type||"MultiPolygon"===i.type)t(i,h),h++;else{if("GeometryCollection"!==i.type)throw new Error("Unknown Geometry Type");for(o=0;o<i.geometries.length;o++)t(i.geometries[o],h),h++}}function d(e,t,r){var o=r;return f(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function p(e,t,r){if(!0===r)return y(e,t);var o=Math.PI/180,n=180/Math.PI,i=me(e),a=me(t),s=o*i[0],g=o*a[0],h=o*i[1],l=o*a[1],c=Math.sin(g-s)*Math.cos(l),u=Math.cos(h)*Math.sin(l)-Math.sin(h)*Math.cos(l)*Math.cos(g-s);return n*Math.atan2(c,u)}function y(e,t){var r=p(t,e);return r=(r+180)%360}function _(e,t){return t=t||{},e=L(e,t),C(e,t)}function w(e){var t=e*Math.PI/180;return Math.tan(t)}function M(e){var t=e*Math.PI/180;return Math.cos(t)}function v(e,t){var r=e.properties||{};return t.nested&&(r=r[t.nested]?r[t.nested]:{}),r}function L(e,t){var r=v(e,t),o=r.angle||t.angle,n=e.geometry.type;if("GeometryCollection"===n&&3===e.geometry.geometries.length&&"Point"===e.geometry.geometries[0].type&&"Point"===e.geometry.geometries[1].type&&"Point"===e.geometry.geometries[2].type)return e;if(void 0===o)throw new Error("feature must include angle property, or global angle option must be set");if("LineString"===n){if(2===e.geometry.coordinates.length)return e;throw new Error("only accepts only accepts LineStrings with two points")}if("GeometryCollection"===n){if(2===e.geometry.geometries.length&&"Point"===e.geometry.geometries[0].type&&"Point"===e.geometry.geometries[1].type)return e;throw new Error("only accepts GeometryCollections containing two Points")}if("Point"===n){if(void 0!==r.bearing&&void 0!==r.distance)return e;throw new Error("only accepts single Points with distance and bearing properties")}throw new Error("only accepts LineStrings with two points, GeometryCollections \ncontaining two Points, or single Points with distance and bearing properties\n - without the angle property set, GeometryCollections with three Points are accepted")}function C(e,t){var r=e.geometry.type;return"Point"===r?k(e,t):"LineString"===r?P(e,t):"GeometryCollection"===r?b(e,t):void 0}function k(e,t){var r=v(e,t),o=r.distance,n=r.angle||t.angle,i=$(e,o,r.bearing,_e),a=w(n/2)*o,s=[$(i,a,r.bearing+90,_e),$(i,-a,r.bearing+90,_e)];return{type:"Feature",properties:e.properties,geometry:{type:"GeometryCollection",geometries:[e.geometry,{type:"LineString",coordinates:[s[0].geometry.coordinates,s[1].geometry.coordinates]}]}}}function P(e,t){var r=v(e,t),o=r.angle||t.angle,n=ue(e),i=e.geometry.coordinates.map(function(e){return{type:"Feature",geometry:{type:"Point",coordinates:e}}}),a=ye(i[0],n,_e),s=fe(i[0],i[1]),g=a/w(o/2),h=$(n,g,s+90,_e);return{type:"Feature",properties:e.properties,geometry:{type:"GeometryCollection",geometries:[h.geometry,e.geometry]}}}function b(e,t){var r,o=e.geometry.geometries,n=o[0],i=o[1],a=fe(n,i);if(2===o.length){r=v(e,t).angle||t.angle}else{var s=fe(n,o[2]),g=(s-a+360)%180;r=g<90?2*g:2*(180-g)}var h=ye(n,i,_e),l=h/M(r/2),c=$(n,l,a-r/2,_e),u=$(n,l,a+r/2,_e);return{type:"Feature",properties:Object.assign({},e.properties,{angle:r,bearing:a,distance:h}),geometry:{type:"GeometryCollection",geometries:[n,{type:"LineString",coordinates:[c.geometry.coordinates,u.geometry.coordinates]}]}}}var E=window.L,O=E.Evented.extend({options:{controlCrosshairImg:"../images/crosshair-icon.svg",crosshairHTML:'<img alt="Center of the map; crosshair location" title="Crosshair" src="../images/crosshair-icon.svg" width="100px" />'},initialize:function(e){E.setOptions(this,e)},addTo:function(e){this._map=e;var t=e.getContainer();return this._element=E.DomUtil.create("div","leaflet-geotag-photo-crosshair",t),this._element.innerHTML=this.options.crosshairHTML,this._boundOnInput=this._onInput.bind(this),this._boundOnChange=this._onChange.bind(this),this._map.on("move",this._boundOnInput),this._map.on("moveend",this._boundOnChange),this},removeFrom:function(e){return this._map&&this._boundOnInput&&this._boundOnChange&&(this._map.off("move",this._boundOnInput),this._map.off("moveend",this._boundOnChange)),this._element&&E.DomUtil.remove(this._element),this},_onInput:function(){this.fire("input")},_onChange:function(){this.fire("change")},getCrosshairLatLng:function(){return this._map.getCenter()},getCrosshairPoint:function(){if(this._map){var e=this.getCrosshairLatLng();return{type:"Point",coordinates:[e.lng,e.lat]}}}}),F=o,I=i,D=n,T=e,A=t,V={geojsonType:F,collectionOf:I,featureOf:D,getCoord:T,getCoords:A},S=a,G=function(e,t){if(!e)throw new Error("No coordinates passed");if(void 0===e.length)throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");if("number"!=typeof e[0]||"number"!=typeof e[1])throw new Error("Coordinates must numbers");return a({type:"Point",coordinates:e},t)},B=function(e,t){if(!e)throw new Error("No coordinates passed");for(var r=0;r<e.length;r++){var o=e[r];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var n=0;n<o[o.length-1].length;n++)if(o[o.length-1][n]!==o[0][n])throw new Error("First and last Position are not equivalent.")}return a({type:"Polygon",coordinates:e},t)},K=function(e,t){if(!e)throw new Error("No coordinates passed");return a({type:"LineString",coordinates:e},t)},N=function(e){if(!e)throw new Error("No features passed");return{type:"FeatureCollection",features:e}},R=function(e,t){if(!e)throw new Error("No coordinates passed");return a({type:"MultiLineString",coordinates:e},t)},x=function(e,t){if(!e)throw new Error("No coordinates passed");return a({type:"MultiPoint",coordinates:e},t)},U=function(e,t){if(!e)throw new Error("No coordinates passed");return a({type:"MultiPolygon",coordinates:e},t)},j=function(e,t){if(!e)throw new Error("No geometries passed");return a({type:"GeometryCollection",geometries:e},t)},z={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,kilometers:6373,kilometres:6373,feet:20908792.65},q=function(e,t){var r=z[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e*r},J=function(e,t){var r=z[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e/r},H=function(e,t){var r=z[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e/r*57.2958},Q={feature:S,point:G,polygon:B,lineString:K,featureCollection:N,multiLineString:R,multiPoint:x,multiPolygon:U,geometryCollection:j,radiansToDistance:q,distanceToRadians:J,distanceToDegrees:H},W=V.getCoord,X=Q,Y=X.point,Z=X.distanceToRadians,$=function(e,t,r,o){var n=Math.PI/180,i=180/Math.PI,a=W(e),s=n*a[0],g=n*a[1],h=n*r,l=Z(t,o),c=Math.asin(Math.sin(g)*Math.cos(l)+Math.cos(g)*Math.sin(l)*Math.cos(h)),u=s+Math.atan2(Math.sin(h)*Math.sin(l)*Math.cos(g),Math.cos(l)-Math.sin(g)*Math.sin(c));return Y([i*u,i*c])},ee=s,te=g,re=h,oe=l,ne=c,ie=u,ae=m,se=f,ge=d,he={coordEach:ee,coordReduce:te,propEach:re,propReduce:oe,featureEach:ne,featureReduce:ie,coordAll:ae,geomEach:se,geomReduce:ge},le=he.coordEach,ce=Q.point,ue=function(e){var t=0,r=0,o=0;return le(e,function(e){t+=e[0],r+=e[1],o++},!0),ce([t/o,r/o])},me=V.getCoord,fe=p,de=V.getCoord,pe=Q.radiansToDistance,ye=function(e,t,r){var o=Math.PI/180,n=de(e),i=de(t),a=o*(i[1]-n[1]),s=o*(i[0]-n[0]),g=o*n[1],h=o*i[1],l=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(s/2),2)*Math.cos(g)*Math.cos(h);return pe(2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l)),r)},_e="meters",we=window.L,Me=we.Control.extend({options:{position:"topleft"},initialize:function(e,t){this._geotagPhotoCamera=e,we.setOptions(this,t)},onAdd:function(e){this._map=e;var t="leaflet-control-geotag-photo-",r=we.DomUtil.create("div",t+" leaflet-bar"),o='<img role="none" src="'+this.options.cameraImg+'" />',n='<img role="none" src="'+this.options.crosshairImg+'" />';return this._cameraButton=this._createButton(o,"Move camera back to map (C)",t+"camera",r,this._centerCamera),this._crosshairButton=this._createButton(n,"Move map back to camera (M)",t+"crosshair",r,this._centerMap),this._boundMapKeyPress=this._mapKeyPress.bind(this),this._map.on("keypress",this._boundMapKeyPress),r},_createButton:function(e,t,r,o,n){var i=we.DomUtil.create("a",r,o);return i.innerHTML=e,i.href="#",i.title=t,i.setAttribute("role","button"),i.setAttribute("aria-label",t),we.DomEvent.on(i,"mousedown dblclick",we.DomEvent.stopPropagation).on(i,"click",we.DomEvent.stop).on(i,"click",n,this).on(i,"click",this._refocusOnMap,this),i},onRemove:function(e){we.DomUtil.remove(this._element),e.off("keypress",this._boundMapKeyPress)},_mapKeyPress:function(e){99===e.originalEvent.charCode?this._centerCamera():109===e.originalEvent.charCode&&this._centerMap()},_centerCamera:function(){this._map&&this._geotagPhotoCamera&&this._geotagPhotoCamera.centerBounds(this._map.getBounds())},_centerMap:function(){this._map&&this._geotagPhotoCamera&&this._map.fitBounds(this._geotagPhotoCamera.getBounds())}}),ve=window.L;ve.geotagPhotoCameraControl=function(e,t){return new Me(e,t)};var Le=ve.FeatureGroup.extend({options:{draggable:!0,control:!0,angleMarker:!0,minAngle:5,maxAngle:120,controlCameraImg:"../images/camera-icon.svg",controlCrosshairImg:"../images/crosshair-icon.svg",cameraIcon:ve.icon({iconUrl:"../images/camera.svg",iconSize:[38,38],iconAnchor:[19,19]}),targetIcon:ve.icon({iconUrl:"../images/marker.svg",iconSize:[32,32],iconAnchor:[16,16]}),angleIcon:ve.icon({iconUrl:"../images/marker.svg",iconSize:[32,32],iconAnchor:[16,16]}),outlineStyle:{color:"black",opacity:.5,weight:2,dashArray:"5, 7",lineCap:"round",lineJoin:"round"},fillStyle:{weight:0,fillOpacity:.2,fillColor:"#3388ff"}},initialize:function(e,t){ve.setOptions(this,t),this.options.minAngle=Math.max(this.options.minAngle,1),this.options.maxAngle=Math.min(this.options.maxAngle,179),this._fieldOfView=_(e),this._angle=this._fieldOfView.properties.angle;var r=this._createLayers();ve.LayerGroup.prototype.initialize.call(this,r),this.setDraggable(this.options.draggable)},_createLayers:function(){this._cameraIcon=this.options.cameraIcon,this._targetIcon=this.options.targetIcon,this._angleIcon=this.options.angleIcon;var e=this._getPointList(this._fieldOfView),t=this._getCameraFromPointList(e),r=this._getTargetFromPointList(e),o=this._getAngleFromPointList(e);this._polyline=ve.polyline(e,this.options.outlineStyle),this._polygon=ve.polygon(e,Object.assign(this.options.fillStyle,{className:"field-of-view"})),this._control=ve.geotagPhotoCameraControl(this,{cameraImg:this.options.controlCameraImg,crosshairImg:this.options.controlCrosshairImg}),this._cameraMarker=ve.marker(t,{icon:this._cameraIcon,draggable:this.options.draggable,zIndexOffset:600,title:"Camera",alt:"Location of the camera"}).on("drag",this._onMarkerDrag,this).on("dragend",this._onMarkerDragEnd,this),this._targetMarker=ve.marker(r,{icon:this._targetIcon,draggable:this.options.draggable,zIndexOffset:200,title:"Target",alt:"Location of the target"}).on("drag",this._onMarkerDrag,this).on("dragend",this._onMarkerDragEnd,this),this._angleMarker=ve.marker(o,{icon:this._angleIcon,draggable:this.options.draggable,zIndexOffset:400,title:"Angle",alt:"Field of view angle"}).on("drag",this._onAngleMarkerDrag,this).on("dragend",this._onMarkerDragEnd,this);var n=this._updateMarkerBearings.bind(this),i=function(e){ve.Marker.prototype._setPos.call(this,e),n()};return this._cameraMarker._setPos=this._targetMarker._setPos=i,[this._polygon,this._polyline,this._targetMarker,this._angleMarker,this._cameraMarker]},addTo:function(e){return this._map=e,ve.FeatureGroup.prototype.addTo.call(this,e),this.options.control&&this._control.addTo(e),this._boundOnDocumentKeyDown=this._onDocumentKeyDown.bind(this),document.addEventListener("keydown",this._boundOnDocumentKeyDown),this.setDraggable(this.options.draggable),this._updateMarkerBearings(this._fieldOfView),this},removeFrom:function(e){return this._map=void 0,ve.FeatureGroup.prototype.removeFrom.call(this,e),this._boundOnDocumentKeyDown&&document.removeEventListener("keydown",this._boundOnDocumentKeyDown),this},_getPointList:function(e){return[[e.geometry.geometries[1].coordinates[0][1],e.geometry.geometries[1].coordinates[0][0]],[e.geometry.geometries[0].coordinates[1],e.geometry.geometries[0].coordinates[0]],[e.geometry.geometries[1].coordinates[1][1],e.geometry.geometries[1].coordinates[1][0]]]},_getCameraFromPointList:function(e){return e[1]},_getTargetFromPointList:function(e){return[(e[0][0]+e[2][0])/2,(e[0][1]+e[2][1])/2]},_getAngleFromPointList:function(e){return e[2]},_addRotateTransform:function(e,t){if(e){var r=e.style[ve.DomUtil.TRANSFORM],o="rotate("+t+")";e.style.transformOrigin="center center",-1!==r.indexOf("rotate")?e.style[ve.DomUtil.TRANSFORM]=r.replace(/rotate\(.*?\)/,o):e.style[ve.DomUtil.TRANSFORM]=r+" "+o}},_updateMarkerBearings:function(e){e=e||this._fieldOfView;var t=e.properties.bearing,r=e.properties.angle;this._addRotateTransform(this._cameraMarker._icon,t+"deg"),this._addRotateTransform(this._targetMarker._icon,t+"deg"),this._addRotateTransform(this._angleMarker._icon,t+r/2+"deg")},_drawFieldOfView:function(e){e=e||this._fieldOfView;var t=this._getPointList(e);this._polyline.setLatLngs(t),this._polygon.setLatLngs(t)},_updateFieldOfView:function(){var e=this._angle,t=this._cameraMarker.getLatLng(),r=this._targetMarker.getLatLng(),o={type:"Feature",properties:{angle:e},geometry:{type:"GeometryCollection",geometries:[this._geoJsonPoint(t),this._geoJsonPoint(r)]}};this._fieldOfView=_(o);var n=this._getAngleFromPointList(this._getPointList(this._fieldOfView));this._angleMarker.setLatLng(n),this._updateMarkerBearings(this._fieldOfView),this._drawFieldOfView(this._fieldOfView)},_onAngleMarkerDrag:function(e){var t=this._cameraMarker.getLatLng(),r=this._targetMarker.getLatLng(),o=this._angleMarker.getLatLng(),n={type:"Feature",geometry:{type:"GeometryCollection",geometries:[this._geoJsonPoint(t),this._geoJsonPoint(r),this._geoJsonPoint(o)]}};this._fieldOfView=_(n),this.setAngle(this._fieldOfView.properties.angle)},_onMarkerDrag:function(e){this._updateFieldOfView(),this.fire("input")},_onMarkerDragEnd:function(e){this.fire("change")},_moveMarker:function(e,t){var r=this._map.latLngToContainerPoint(e.getLatLng());r=r.add(t);var o=this._map.containerPointToLatLng(r);e.setLatLng(o),this._updateFieldOfView(),this.fire("change")},_onMarkerKeyDown:function(e,t){var r=20;t.shiftKey&&(r*=4),37===t.keyCode?this._moveMarker(e,ve.point(-r,0)):38===t.keyCode?this._moveMarker(e,ve.point(0,-r)):39===t.keyCode?this._moveMarker(e,ve.point(r,0)):40===t.keyCode&&this._moveMarker(e,ve.point(0,r))},_onAngleMarkerKeyDown:function(e){var t=2.5;e.shiftKey&&(t*=4),37===e.keyCode?this.setAngle(this._angle-t):39===e.keyCode&&this.setAngle(this._angle+t)},_onDocumentKeyDown:function(e){document.activeElement===this._cameraMarker._icon?this._onMarkerKeyDown(this._cameraMarker,e):document.activeElement===this._targetMarker._icon?this._onMarkerKeyDown(this._targetMarker,e):document.activeElement===this._angleMarker._icon&&this._onAngleMarkerKeyDown(e)},_setMarkerVisible:function(e,t){e._icon.style.display=t?"inherit":"none"},_geoJsonPoint:function(e){return{type:"Point",coordinates:[e.lng,e.lat]}},getFieldOfView:function(){return this._fieldOfView},getCameraLatLng:function(){return this._cameraMarker.getLatLng()},getTargetLatLng:function(){return this._targetMarker.getLatLng()},getCameraPoint:function(){return this._geoJsonPoint(this.getCameraLatLng())},getTargetPoint:function(){return this._geoJsonPoint(this.getTargetLatLng())},getCenter:function(){if(this._map)return ve.latLngBounds([this.getCameraLatLng(),this.getTargetLatLng()]).getCenter()},centerBounds:function(e){var t=this.getBounds();if(!e.contains(t)){var r=this.getCenter(),o=this.getCameraLatLng(),n=this.getTargetLatLng(),i=e.getCenter(),a=[i.lat-(r.lat-o.lat),i.lng-(r.lng-o.lng)],s=[i.lat-(r.lat-n.lat),i.lng-(r.lng-n.lng)];this.setCameraAndTargetLatLng(a,s)}},setCameraLatLng:function(e){this._map&&(this._cameraMarker.setLatLng(e),this._updateFieldOfView(),this.fire("change"))},setTargetLatLng:function(e){this._map&&(this._targetMarker.setLatLng(e),this._updateFieldOfView(),this.fire("change"))},setCameraAndTargetLatLng:function(e,t){this._map&&(this._cameraMarker.setLatLng(e),this._targetMarker.setLatLng(t),this._updateFieldOfView(),this.fire("change"))},getBounds:function(){if(this._fieldOfView){var e=this._getPointList(this._fieldOfView);return ve.latLngBounds(e)}},setAngle:function(e){this._angle=Math.max(Math.min(e,this.options.maxAngle),this.options.minAngle),this._updateFieldOfView(),this.fire("input")},setDraggable:function(e){this._map&&(e?(this._cameraMarker.dragging.enable(),this._targetMarker.dragging.enable(),this._angleMarker.dragging.enable()):(this._cameraMarker.dragging.disable(),this._targetMarker.dragging.disable(),this._angleMarker.dragging.disable()),this._setMarkerVisible(this._targetMarker,e),this._setMarkerVisible(this._angleMarker,e&&this.options.angleMarker))}}),Ce=window.L;"function"!=typeof Object.assign&&(Object.assign=function(e,t){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var r=Object(e),o=1;o<arguments.length;o++){var n=arguments[o];if(null!=n)for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(r[i]=n[i])}return r}),Ce.geotagPhoto={crosshair:function(e){return new O(e)},camera:function(e,t){return new Le(e,t)}},Ce.GeotagPhoto={Crosshair:O,Camera:Le}}();
//# sourceMappingURL=Leaflet.GeotagPhoto.min.js.map
